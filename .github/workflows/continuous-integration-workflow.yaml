name: Continuous integration
on: [push, pull_request]

jobs:
    build-unixes:
        name: Build Linux
        runs-on: ${{ matrix.variant.os }}
        strategy:
            matrix:
                variant:
                    - os: ubuntu-latest
                      platformName: linux64
                      buildMode: RelWithDebInfo
        env:
            PLATFORM_NAME: ${{ matrix.variant.platformName }}
            BUILD_MODE: ${{ matrix.variant.buildMode }}
            PROJECT_NAME: coal-serialization-cpp
        steps:
            - uses: actions/checkout@v1

            - name: CI Build
              run: ./scripts/ci-build.sh
    build-osx:
        name: Build OS X
        runs-on: ${{ matrix.variant.os }}
        strategy:
            matrix:
                variant:
                    - os: macos-latest
                      platformName: osx
                      buildMode: RelWithDebInfo
        env:
            PLATFORM_NAME: ${{ matrix.variant.platformName }}
            BUILD_MODE: ${{ matrix.variant.buildMode }}
            PROJECT_NAME: abstract-gpu
            MACOSX_DEPLOYMENT_TARGET: 10.14
        steps:
            - uses: actions/checkout@v1

            - name: CI Build
              run: ./scripts/ci-build.sh
    build-windows:
        name: Build Windows
        runs-on: ${{ matrix.variant.os }}
        strategy:
            matrix:
                variant:
                    - os: windows-latest
                      platformName: windows-x86
                      vsPlatform: Win32
                      buildMode: RelWithDebInfo
                      
                    - os: windows-latest
                      platformName: windows-x64
                      vsPlatform: x64
                      buildMode: RelWithDebInfo
        env:
            VS_PLATFORM: ${{ matrix.variant.vsPlatform }}
            PLATFORM_NAME: ${{ matrix.variant.platformName }}
            BUILD_MODE: ${{ matrix.variant.buildMode }}
            PROJECT_NAME: abstract-gpu
        steps:
            - uses: actions/checkout@v1

            - name: CI Build
              run: ./scripts/ci-build.ps1

            - name: Release
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: artifacts/dist/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
